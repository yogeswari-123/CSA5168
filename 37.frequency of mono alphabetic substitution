#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define MAX_TEXT_LENGTH 1000
#define ALPHABET_SIZE 26

double english_freq[ALPHABET_SIZE] = {
    8.167, 1.492, 2.782, 4.253, 12.702, 2.228, 2.015, 6.094, 6.966, 0.153, 
    0.772, 4.025, 2.406, 6.749, 7.507, 1.929, 0.095, 5.987, 6.327, 9.056, 
    2.758, 0.978, 2.360, 0.150, 1.974, 0.074
};

void count_letter_frequency(const char* ciphertext, int* freq) {
    for (int i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            char ch = tolower(ciphertext[i]);
            freq[ch - 'a']++;
        }
    }
}
void sort_by_frequency(int* freq, char* sorted_letters) {
    int sorted_freq[ALPHABET_SIZE];
    char alphabet[ALPHABET_SIZE] = "abcdefghi";

    memcpy(sorted_freq, freq, ALPHABET_SIZE * sizeof(int));
    for (int i = 0; i < ALPHABET_SIZE - 1; i++) {
        for (int j = i + 1; j < ALPHABET_SIZE; j++) {
            if (sorted_freq[i] < sorted_freq[j]) {
              
                int temp_freq = sorted_freq[i];
                sorted_freq[i] = sorted_freq[j];
                sorted_freq[j] = temp_freq;
                char temp_letter = alphabet[i];
                alphabet[i] = alphabet[j];
                alphabet[j] = temp_letter;
            }
        }
    }
    strcpy(sorted_letters, alphabet);
}

void decrypt_with_key(const char* ciphertext, const char* key, char* plaintext) {
    for (int i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            char ch = tolower(ciphertext[i]);
            int pos = strchr(key, ch) - key; 
            plaintext[i] = 'a' + pos;
        } else {
            plaintext[i] = ciphertext[i]; 
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}
void print_top_plaintexts(const char* ciphertext, const char* sorted_ciphertext_letters, int top_n) {
    char guessed_key[ALPHABET_SIZE + 1] = "abcdefghijklmnopqrstuvwxyz";
    char plaintext[MAX_TEXT_LENGTH];

    
    for (int attempt = 0; attempt < top_n; attempt++) {
      
        for (int i = 0; i < ALPHABET_SIZE; i++) {
            guessed_key[sorted_ciphertext_letters[i] - 'a'] = 'a' + i;
        }
        decrypt_with_key(ciphertext, guessed_key, plaintext);
        printf("\nPossible plaintext #%d:\n%s\n", attempt + 1, plaintext);

        if (attempt < top_n - 1) {
            char temp = guessed_key[0];
            guessed_key[0] = guessed_key[1];
            guessed_key[1] = temp;
        }
    }
}

int main() {
    char ciphertext[MAX_TEXT_LENGTH];
    int letter_freq[ALPHABET_SIZE] = {0};
    char sorted_ciphertext_letters[ALPHABET_SIZE + 1];
    int top_n;
    printf("Enter the ciphertext: ");
    fgets(ciphertext, MAX_TEXT_LENGTH, stdin);
    ciphertext[strlen(ciphertext) - 1] = '\0'; 
    printf("Enter the number of top possible plaintexts you want to see: ");
    scanf("%d", &top_n);
    count_letter_frequency(ciphertext, letter_freq);
    sort_by_frequency(letter_freq, sorted_ciphertext_letters);
    print_top_plaintexts(ciphertext, sorted_ciphertext_letters, top_n);

    return 0;
}
